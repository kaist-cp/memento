Import('benchEnv')
stampEnv = benchEnv.Clone()

# $(CC) $(CCFLAGS) $(CPPPATH)
# Use O0 flag only else GCC itself segfaults !
stampEnv.Append(CCFLAGS = ' -O0')
stampEnv.Append(CCFLAGS = '-fno-omit-frame-pointer')

# Not sure why the order matters but these files should 
# be included first, before any other headers. Therefore they
# part of the CCFLAGS and not CPPPATH. I don't care how the files
# find their way into the object file so long as they do. 
# This doesn't make any sense. This is GCC-specific, and not 
# a problem with vacation or Mnemosyne.
stampEnv.Append(CCFLAGS = '-Ibench/stamp-kozy/lib')
stampEnv.Append(CCFLAGS = '-Ibench/stamp-kozy/lib/ptm')

stamp_list = Split("""
		   vacation
                   """)

sconscript_path = 'vacation/SConscript'

# Build library for persistent variables
pvarLibrary = None
stampEnv['BUILD_PVAR'] = True
Export('stampEnv')
pvarLibrary = SConscript(sconscript_path)
Export('pvarLibrary')

# Build STAMP benchmark using the library 
# we just built for handling persistent variables
stampEnv['BUILD_PVAR'] = False
Export('stampEnv')
SConscript(sconscript_path)

